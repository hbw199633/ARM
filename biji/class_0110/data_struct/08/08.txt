/* ************************************************************************
	> File Name: 08.txt
	> Function: 
	> Author: hlq
	> Mail: hlqlinux@gmail.com 
	> Created Time: 2017年02月22日 星期三 09时15分13秒
	> Version: v1.0
 ************************************************************************/

 层序遍历：

 二叉树如何释放：


 二叉树的非规则构造：

 二叉树要掌握的知识：
 	4种遍历方式
	层序遍历

	构建思想。

二叉树的特殊应用：
	1. 最优二叉树	===》 huffman树	===》带权最短二叉树

WPL		===> 带权路径长度之和	===》 检验是否
是最优二叉树标准。

练习：有一个通信电文由如下字母组成：
	a b c  d e f g	==> 字符
	5 3 7 12 1 6 9	==> 权重

	构建最优二叉树

最优二叉树的构建：
	1. 将所有的权重都看成独立的n棵树的森林
	2. 在森林中选择两个最小的树，形成一个新树
	并添加到森林中。
	3. 从森林中删除构建过程中的那两个子树
	4. 重复2 3 步骤，直到森林中的所有树都
	形成一颗二叉树为止。
	5. 最后形成的二叉树就是最优二叉树。

	注意：在新建的二叉树如果其值大于现在森林中
	的两棵显存的树的时候，要将原来的小树独立
	形成新的分支。

huffman 编码



=============================
排序：
	冒泡排序，选择排序，插入排序，快速排序
	归并排序，堆排序，哈希排序，基数排序

查找：
	顺序查找，折半查找 哈希查找


折半查找：要求数据必须有序的。




