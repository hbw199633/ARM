!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
FLAGS	Makefile	/^FLAGS			:= -Wall -g$/;"	m
OBJS	Makefile	/^OBJS			:= main.c dlinklist.c$/;"	m
TARGET	Makefile	/^TARGET			:= dlink$/;"	m
__DLINKLIST_H__	dlinklist.h	2;"	d
create_dlinklist	dlinklist.c	/^dlinknode * create_dlinklist(void)$/;"	f
create_dlinknode	dlinklist.c	/^dlinknode * create_dlinknode(datatype value)$/;"	f
data	dlinklist.h	/^	datatype 		data;$/;"	m	struct:node
datatype	dlinklist.h	/^typedef int datatype;$/;"	t
dlinknode	dlinklist.h	/^}dlinknode;$/;"	t	typeref:struct:node
free_dlinklist	dlinklist.c	/^int free_dlinklist(dlinknode * L)$/;"	f
left	dlinklist.h	/^	struct node *	left;$/;"	m	struct:node	typeref:struct:node::node
main	main.c	/^int main(int argc, const char *argv[])$/;"	f
node	dlinklist.h	/^typedef struct node {$/;"	s
right	dlinklist.h	/^	struct node *	right;$/;"	m	struct:node	typeref:struct:node::node
show_left_dlinklist	dlinklist.c	/^int show_left_dlinklist(dlinknode * L)$/;"	f
show_right_dlinklist	dlinklist.c	/^int show_right_dlinklist(dlinknode * L)$/;"	f
