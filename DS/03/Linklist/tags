!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
FLAGS	Makefile	/^FLAGS = -Wall -g -c$/;"	m
OBJS	Makefile	/^OBJS = main.o Linklist.o$/;"	m
_LINKLIST_H_	Linklist.h	10;"	d
_node_	Linklist.h	/^typedef struct _node_$/;"	s
add_linklist	Linklist.c	/^int add_linklist(linklist *ls,datatype va)$/;"	f
cc	Makefile	/^cc = gcc$/;"	m
chg_pos_linklist	Linklist.c	/^int chg_pos_linklist(linklist *ls,int pos,datatype va)$/;"	f
chg_va_linklist	Linklist.c	/^int chg_va_linklist(linklist *ls,datatype old_va ,datatype va)$/;"	f
count	Linklist.h	/^	int			count;$/;"	m	struct:__anon1
create_linklist	Linklist.c	/^linklist * create_linklist()$/;"	f
create_linknode	Linklist.c	/^linknode * create_linknode(datatype va)$/;"	f
data	Linklist.h	/^	datatype		data;$/;"	m	struct:_node_
datatype	Linklist.h	/^typedef int datatype;$/;"	t
del_pos_linklist	Linklist.c	/^int del_pos_linklist(linklist *ls,int pos)$/;"	f
del_va_linklist	Linklist.c	/^int del_va_linklist(linklist *ls,datatype va)$/;"	f
empty_linklist	Linklist.c	/^int empty_linklist(linklist *ls)$/;"	f
find_pos_linklist	Linklist.c	/^int find_pos_linklist(linklist *ls,int pos)$/;"	f
find_va_linklist	Linklist.c	/^int find_va_linklist(linklist *ls,datatype va)$/;"	f
free_linklist	Linklist.c	/^int free_linklist(linklist *ls)$/;"	f
head	Linklist.h	/^	linknode	*head;$/;"	m	struct:__anon1
inr_pos_linklist	Linklist.c	/^int inr_pos_linklist(linklist *ls,int pos,datatype va)$/;"	f
inr_va_linklist	Linklist.c	/^int inr_va_linklist(linklist *ls,datatype old_va,datatype va)$/;"	f
linklist	Linklist.h	/^}linklist;$/;"	t	typeref:struct:__anon1
linknode	Linklist.h	/^}linknode;$/;"	t	typeref:struct:_node_
main	main.c	/^int main(int argc,const char* argv[])$/;"	f
next	Linklist.h	/^	struct _node_	*next;$/;"	m	struct:_node_	typeref:struct:_node_::_node_
show_linklist	Linklist.c	/^int show_linklist(linklist *ls)$/;"	f
